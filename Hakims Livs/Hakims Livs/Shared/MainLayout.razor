@using Blazored.Typeahead;
@using Hakims_Livs.Data;
@using Hakims_Livs.Services
@inject Data.ApplicationDbContext context
@inherits LayoutComponentBase
@inject IShowModal _showModal
@inject ICart _cart



<PageTitle>Hakim Livs</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 auth">
            <div class ="searchbar">
            <BlazoredTypeahead SearchMethod="AutoSearch" @bind-Value="SelectedProduct">
                    <SelectedTemplate>@if (context != null)
                        {
                            @context.Name
                        }
                        </SelectedTemplate>
                    <ResultTemplate><img src="@context.Image" width="40" height="40"/> @context.Name</ResultTemplate>
            </BlazoredTypeahead>
            </div>
            @if (SelectedProduct != null)
            {
                ShowProduct(SelectedProduct.ID);
                //Reseting selected product so it doesnt keep showing up when switching tab
                SelectedProduct = null;
            }
        <form>
            <NavLink href="shoppingcart">
            <button class="create navlink">Kundvagnen</button>
            </NavLink>

            <NavLink href="checkout" >
                    <button class="create navlink">Till Kassan: @if (@totalCart > 0)
                        {
                            @totalCart
                        }
                        </button>
                </NavLink>
        </form>
            <LoginDisplay /> 
          
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>
@code {
    private List<Product>? products;
    public Product? SelectedProduct;
    public double totalCart;
    protected async override void OnInitialized()
    {
        products = new List<Product>();
        products = context.Products.ToList();
        totalCart = await _cart.UpdateCartPrice();
    }
    private async Task<IEnumerable<Product>> AutoSearch(string searchProduct)
    {
        return await Task.FromResult(products.Where(x => x.Name.ToLower().Contains(searchProduct.ToLower())).ToList());
    }
    void ShowProduct (int productId)
    {
        _showModal.DisplayModal(productId);
    }
}