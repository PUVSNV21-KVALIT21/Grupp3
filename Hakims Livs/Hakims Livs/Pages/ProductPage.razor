@page "/product"
@page "/product/{id:int}"
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Mvc.Rendering
@inject Data.ApplicationDbContext context
@using Hakims_Livs.Models;

<PageTitle> Produkter </PageTitle>
    <select @onchange="ChangeSorting">
    @foreach (var option in options)
        {
            <option value=@option>@option</option>
        }
    </select>
    <div class="productcontainer">
        @for (int i=0; i<10; i++)
        {
        @foreach (var product in ProductList)
            {
                <div class="productdiv">
                    <img class ="productimage "src= "@product.Image" />
                    <div class ="productname">@product.Name</div>
                    <div class ="productdescription">@product.Description</div>
                    <div class ="productprice">@product.Price kr</div>
                    <button class="cartbutton">Lägg till i varukorg</button>
                </div>
            }
        }
    </div>
 
@code {

    [Parameter]
    public  int? id {get; set; }
    public List<Product> ProductList { get; set; }
    public List<string> options = new List<string>();
    public string SelectedString { get; set; }

    protected override void OnParametersSet()
    {
        options = new List<string>() { "Name", "Price", "Stock" };
        SelectedString = "Name";

        var query = context.Products.Where(x => x.CategoryName.ID == id).AsNoTracking().OrderBy(x => x.Name);

        ProductList = new List<Product>();
        ProductList = query.ToList();
    }
    public async Task ChangeSorting(ChangeEventArgs e)
    {
        SelectedString = e.Value.ToString();
        var query = context.Products.Where(x => x.CategoryName.ID == id).AsNoTracking();
        if (SelectedString == "Name")
        {
            query = query
            .OrderBy(x => x.Name);
        }
        if (SelectedString == "Price")
        {
            query = query
            .OrderBy(x => x.Price);
        }
        //Finns ingen lagerstatus ännu
        if (SelectedString == "Stock")
        {
            throw new NotImplementedException();
        }
        ProductList = new List<Product>();
        ProductList = await query.ToListAsync();
    }
}
